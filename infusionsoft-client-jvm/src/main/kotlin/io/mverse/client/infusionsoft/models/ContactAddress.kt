/**
* Infusionsoft REST API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 1.70.0.78606
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.mverse.client.infusionsoft.models


import kotlinx.serialization.Optional
import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName


import io.mverse.client.infusionsoft.infrastructure.EnumStringSerializer
/**
 * 
 * @param country_code 
 * @param field 
 * @param line1 
 * @param line2 
 * @param locality 
 * @param postal_code Field used to store postal codes containing a combination of letters and numbers ex. 'EC1A', 'S1 2HE', '75000'
 * @param region 
 * @param zip_code Mainly used in the United States, this is typically numeric. ex. '85001', '90002' Note: this is to be used instead of 'postal_code', not in addition to.
 * @param zip_four Last four of a full zip code ex. '8244', '4320'. This field is supplemental to the zip_code field, otherwise will be ignored.
 */
@Serializable
data class ContactAddress (
    @SerialName("field") val field: ContactAddress.Field,
    @SerialName("country_code") @Optional val countryCode: String? = null,
    @SerialName("line1") @Optional val line1: String? = null,
    @SerialName("line2") @Optional val line2: String? = null,
    @SerialName("locality") @Optional val locality: String? = null,
    /* Field used to store postal codes containing a combination of letters and numbers ex. 'EC1A', 'S1 2HE', '75000' */
    @SerialName("postal_code") @Optional val postalCode: String? = null,
    @SerialName("region") @Optional val region: String? = null,
    /* Mainly used in the United States, this is typically numeric. ex. '85001', '90002' Note: this is to be used instead of 'postal_code', not in addition to. */
    @SerialName("zip_code") @Optional val zipCode: String? = null,
    /* Last four of a full zip code ex. '8244', '4320'. This field is supplemental to the zip_code field, otherwise will be ignored. */
    @SerialName("zip_four") @Optional val zipFour: String? = null
) {

    /**
    * 
    * Values: BILLING,SHIPPING,OTHER
    */
    @Serializable(with = Field.Serializer::class)
    enum class Field(val value: String){
    
        BILLING("BILLING"),
    
        SHIPPING("SHIPPING"),
    
        OTHER("OTHER");
    

      class Serializer: EnumStringSerializer<Field>(Field::class)

      override fun toString(): String = value.toString()
    }

}

