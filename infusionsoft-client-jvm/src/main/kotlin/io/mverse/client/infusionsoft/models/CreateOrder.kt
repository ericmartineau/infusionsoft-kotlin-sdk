/**
* Infusionsoft REST API
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 1.70.0.78606
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.mverse.client.infusionsoft.models

import io.mverse.client.infusionsoft.models.AddressInformation
import io.mverse.client.infusionsoft.models.CreateOrderItem

import kotlinx.serialization.Optional
import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName


import io.mverse.client.infusionsoft.infrastructure.EnumStringSerializer
/**
 * 
 * @param contact_id 
 * @param lead_affiliate_id 
 * @param order_date 
 * @param order_items 
 * @param order_title 
 * @param order_type 
 * @param promo_codes Uses multiple strings as promo codes. The corresponding discount will be applied to the order.
 * @param sales_affiliate_id 
 * @param shipping_address 
 */
//@Serializable Not using right now
data class CreateOrder (
    @SerialName("contact_id") val contactId: Long,
    @SerialName("order_date") val orderDate: java.time.LocalDateTime,
    @SerialName("order_items") val orderItems: List<CreateOrderItem>,
    @SerialName("order_title") val orderTitle: String,
    @SerialName("order_type") val orderType: CreateOrder.OrderType,
    @SerialName("lead_affiliate_id") @Optional val leadAffiliateId: Long? = null,
    /* Uses multiple strings as promo codes. The corresponding discount will be applied to the order. */
    @SerialName("promo_codes") @Optional val promoCodes: List<String>? = null,
    @SerialName("sales_affiliate_id") @Optional val salesAffiliateId: Long? = null,
    @SerialName("shipping_address") @Optional val shippingAddress: AddressInformation? = null
) {

    /**
    * 
    * Values: OFFLINE,ONLINE
    */
    @Serializable(with = OrderType.Serializer::class)
    enum class OrderType(val value: String){
    
        OFFLINE("Offline"),
    
        ONLINE("Online");
    

      class Serializer: EnumStringSerializer<OrderType>(OrderType::class)

      override fun toString(): String = value.toString()
    }

}

